{
  "extends": [
    "plugin:astro/recommended",
    "plugin:astro/jsx-a11y-recommended",
    "plugin:eslint-plugin-config/perfectionist"
  ],
  "rules": {
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-unused-vars": "error"
  },
  "overrides": [
    {
      "files": [
        "*.astro"
      ],
      "plugins": [
        "astro"
      ],
      "env": {
        // Enables global variables available in Astro components.
        "node": true,
        "astro/astro": true,
        "es2023": true
      },
      // Allows Astro components to be parsed.
      "parser": "astro-eslint-parser",
      // Parse the script in `.astro` as TypeScript by adding the following configuration.
      // It's the setting you need when using TypeScript.
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "extraFileExtensions": [
          ".astro"
        ],
        // The script of Astro components uses ESM.
        "sourceType": "module"
      },
      "rules": {
        // Enable recommended rules
        "astro/no-conflict-set-directives": "error",
        "astro/no-unused-define-vars-in-style": "error"

        // override/add rules settings here, such as:
        // "astro/no-set-html-directive": "error"
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "env": {
        "browser": true,
        "es2023": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react-hooks/recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "plugins": [
        "react",
        "react-refresh"
      ],
      "rules": {
        "react-refresh/only-export-components": [
          "warn",
          {
            "allowConstantExport": true
          }
        ],
        "react/jsx-curly-brace-presence": [
          2,
          {
            "props": "never",
            "children": "never"
          }
        ]
      }
    }
  ]
}
