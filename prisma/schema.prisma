// Refer to README.md of infra folder to know more information
// about this schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id             String  @id @default(cuid()) @db.VarChar(30)
  name           String
  price          Decimal @db.Money
  quantity       Int
  remainQuantity Int

  image        String
  introduction String   @db.VarChar
  highlights   String[] @db.VarChar
  descriptions String[] @db.Text

  orderItems OrderItem[]
}

enum OrderStatus {
  CREATED
  SUCCESS
  CANCELED
}

model Order {
  id                String @id @default(cuid()) @db.VarChar(30)
  assessmentId      String @unique @db.VarChar(30)
  shippingAddressId String @db.VarChar(30)
  billingAddressId  String @db.VarChar(30)

  status OrderStatus @default(CREATED)

  email         String
  taxRate       Float
  taxes         Decimal @db.Money
  shippingFee   Decimal @db.Money
  subtotal      Decimal @db.Money
  total         Decimal @db.Money
  paymentMethod String

  items           OrderItem[]
  shippingAddress Address     @relation("shippingAddress", fields: [shippingAddressId], references: [id])
  billingAddress  Address     @relation("billingAddress", fields: [billingAddressId], references: [id])
  assessment      Assessment  @relation(fields: [assessmentId], references: [id])
}

model Assessment {
  id               String @id @default(cuid()) @db.VarChar(30)
  assessmentId     String @unique
  fingerprintId    String
  subFingerprintId String
  ipAddress        String @db.Inet

  orders Order[]
}

model OrderItem {
  id        String  @id @default(cuid()) @db.VarChar(30)
  orderId   String  @db.VarChar(30)
  productId String  @db.VarChar(30)
  quantity  Int     @default(1)
  price     Decimal @db.Money

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
}

model Address {
  id            String @id @default(cuid()) @db.VarChar(30)
  phone         String
  firstName     String
  lastName      String
  stressAddress String
  addressLevel4 String
  addressLevel3 String
  addressLevel2 String
  addressLevel1 String
  postalCode    String

  shippingOrders Order[] @relation("shippingAddress")
  billingOrders  Order[] @relation("billingAddress")
}
